/*! @2015 Leo Wang. All Rights Reserved */
void function(e){e("promise/PromiseCapacity",["require","./util","./setImmediate"],function(require){function e(e){this.promise=e,this.status=o,this.isResolved=!1,this.result=void 0,this.fulfilledCallbacks=[],this.rejectedCallbacks=[],this.syncModeEnabled=!1,this.invoke=l}function n(e,n,t,r){return function(i){try{if("function"==typeof n)i=n(i),e=t;e(i)}catch(o){r(o)}}}function t(e,n){n.isResolved=!0;var t=new n.promise.constructor(function(n,t){var r=!1;try{e(function(e){n(e),r=!0},function(e){t(e),r=!0})}catch(i){!r&&t(i)}});t.then(function(e){n.isResolved=!1,n.resolve(e)},function(e){n.isResolved=!1,n.reject(e)})}function r(e){if(e.status!==o){var n=null;if(e.status===a)e.rejectedCallbacks=[],n=e.fulfilledCallbacks;else e.fulfilledCallbacks=[],n=e.rejectedCallbacks;e.invoke(function(){for(var t,r=e.result;t=n.shift();)t(r)})}}var i=require("./util"),o="pending",a="fulfilled",u="rejected",l=require("./setImmediate"),c=function(e){e()};return e.onResolve=function(){},e.onReject=function(e){"undefined"!=typeof console&&console.error(e)},e.prototype={constructor:e,resolve:function(e){if(this.status===o&&!this.isResolved){if(e===this.promise)return void this.reject(new TypeError("Chaining cycle detected for promise #<Promise>"));try{var n=i.getThen(e);if("function"==typeof n)return void t(i.bind(n,e),this)}catch(u){return void(this.status===o&&this.reject(u))}this.result=e,this.status=a,this.constructor.onResolve.call(this.promise,e),r(this)}},reject:function(e){if(this.status===o&&!this.isResolved)this.result=e,this.status=u,this.constructor.onReject.call(this.promise,e),r(this)},then:function(e,t){var i=this;this.syncModeEnabled=this.promise.syncModeEnabled,this.invoke=this.syncModeEnabled?c:l;var o=new this.promise.constructor(function(r,o){i.fulfilledCallbacks.push(n(r,e,r,o)),i.rejectedCallbacks.push(n(o,t,r,o))});return o.syncModeEnabled=this.syncModeEnabled,r(this),o}},e})}("function"==typeof define&&define.amd?define:function(e){module.exports=e(require)},this);